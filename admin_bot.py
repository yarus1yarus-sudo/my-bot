import os
import json
import requests
import time
from datetime import datetime

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
def load_config():
    try:
        with open('config.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        # –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        default_config = {
            "bot_enabled": True,
            "schedule_minutes": 15,
            "last_sent": 0,
            "admin_id": 6396018806,
            "version": "1.0"
        }
        save_config(default_config)
        return default_config

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
def save_config(config):
    with open('config.json', 'w', encoding='utf-8') as f:
        json.dump(config, f, indent=2, ensure_ascii=False)

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
def send_telegram_message(message, chat_id):
    bot_token = os.environ.get('ADMIN_BOT_TOKEN')
    if not bot_token:
        print("‚ùå ADMIN_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    url = f'https://api.telegram.org/bot{bot_token}/sendMessage'
    data = {
        'chat_id': chat_id,
        'text': message,
        'parse_mode': 'HTML'
    }
    
    try:
        response = requests.post(url, data=data, timeout=30)
        return response.status_code == 200
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–µ–∫–¥–æ—Ç–∞ (–∫–æ–ø–∏—è –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞)
def get_joke():
    backup_jokes = [
        "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç ‚Äî —ç—Ç–æ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã, –æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –Ω–µ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–ª–∏, —Å–ø–æ—Å–æ–±–∞–º–∏, –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç–µ.",
        "‚Äî –ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ø—É—Ç–∞—é—Ç –•—ç–ª–ª–æ—É–∏–Ω –∏ –†–æ–∂–¥–µ—Å—Ç–≤–æ?\n‚Äî –ü–æ—Ç–æ–º—É —á—Ç–æ 31 OCT = 25 DEC",
        "–ñ–µ–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞:\n‚Äî –î–æ—Ä–æ–≥–æ–π, —Å—Ö–æ–¥–∏ –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ —Ö–ª–µ–±–æ–º. –ò –µ—Å–ª–∏ –±—É–¥—É—Ç —è–π—Ü–∞, –∫—É–ø–∏ –¥–µ—Å—è—Ç–æ–∫.\n–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –¥–æ–º–æ–π —Å 10 –±—É—Ö–∞–Ω–∫–∞–º–∏ —Ö–ª–µ–±–∞.\n‚Äî –ó–∞—á–µ–º —Å—Ç–æ–ª—å–∫–æ —Ö–ª–µ–±–∞?!\n‚Äî –Ø–π—Ü–∞ –±—ã–ª–∏...",
        "–ó–∞—Ö–æ–¥–∏—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –≤ –±–∞—Ä, –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∏–≤–æ.\n–ë–∞—Ä–º–µ–Ω: ‚Äî –ê –ø–∏–≤–æ –∫–æ–Ω—á–∏–ª–æ—Å—å!\n–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç: ‚Äî –¢–æ–≥–¥–∞ –¥–∞–π—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –µ—â–µ.\n–ë–∞—Ä–º–µ–Ω: ‚Äî –ê —á—Ç–æ –µ—â–µ?\n–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç: ‚Äî –ù–µ –∑–Ω–∞—é, —É –≤–∞—Å –∂–µ –º–µ–Ω—é –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å!\n–ë–∞—Ä–º–µ–Ω: ‚Äî –ú–µ–Ω—é —Ç–æ–∂–µ –∫–æ–Ω—á–∏–ª–æ—Å—å.\n–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç: ‚Äî –¢–æ–≥–¥–∞ –∑–∞—á–µ–º –≤—ã –≤–æ–æ–±—â–µ –∑–¥–µ—Å—å —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?!\n–ë–∞—Ä–º–µ–Ω: ‚Äî –Ø –Ω–µ —Ä–∞–±–æ—Ç–∞—é, —è —Ç–æ–∂–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, –ø—Ä–æ—Å—Ç–æ debugging –¥–µ–ª–∞—é!",
        "‚Äî –°–∫–æ–ª—å–∫–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –∑–∞–º–µ–Ω–∏—Ç—å –ª–∞–º–ø–æ—á–∫—É?\n‚Äî –ù–æ–ª—å. –≠—Ç–æ –∞–ø–ø–∞—Ä–∞—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞."
    ]
    
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        
        response = requests.get('https://www.anekdot.ru/random/anekdot/', 
                              headers=headers, timeout=15)
        response.encoding = 'utf-8'
        
        if response.status_code == 200:
            from bs4 import BeautifulSoup
            soup = BeautifulSoup(response.text, 'html.parser')
            
            # –ò—â–µ–º div —Å –∫–ª–∞—Å—Å–æ–º text
            joke_div = soup.find('div', class_='text')
            if joke_div:
                joke_text = joke_div.get_text().strip()
                if len(joke_text) > 50 and len(joke_text) < 1000:
                    return joke_text
        
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∏–∑ —Ä–µ–∑–µ—Ä–≤–∞
        import random
        return random.choice(backup_jokes)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–∞: {e}")
        import random
        return random.choice(backup_jokes)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–µ–∫–¥–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª
def send_joke_to_channel():
    joke = get_joke()
    message = f"üòÑ <b>–ê–Ω–µ–∫–¥–æ—Ç –¥–Ω—è</b> üòÑ\n\n{joke}"
    
    channel_id = os.environ.get('CHANNEL_ID')
    bot_token = os.environ.get('BOT_TOKEN')
    
    if not bot_token or not channel_id:
        return False, "‚ùå –¢–æ–∫–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    
    url = f'https://api.telegram.org/bot{bot_token}/sendMessage'
    data = {
        'chat_id': channel_id,
        'text': message,
        'parse_mode': 'HTML'
    }
    
    try:
        response = requests.post(url, data=data, timeout=30)
        return response.status_code == 200, joke
    except Exception as e:
        return False, str(e)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
def process_command(command, chat_id, config):
    if chat_id != config['admin_id']:
        send_telegram_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º!", chat_id)
        return config
    
    if command == '/start':
        config['bot_enabled'] = True
        save_config(config)
        send_telegram_message("‚úÖ <b>–ë–æ—Ç –≤–∫–ª—é—á—ë–Ω!</b>\n\nü§ñ –ê–Ω–µ–∫–¥–æ—Ç—ã –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏", chat_id)
    
    elif command == '/stop':
        config['bot_enabled'] = False
        save_config(config)
        send_telegram_message("‚è∏Ô∏è <b>–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!</b>\n\nüõë –ê–≤—Ç–æ–æ—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω–∞", chat_id)
    
    elif command == '/status':
        status = "‚úÖ –í–∫–ª—é—á—ë–Ω" if config['bot_enabled'] else "‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        last_sent = datetime.fromtimestamp(config['last_sent']).strftime('%d.%m.%Y %H:%M') if config['last_sent'] > 0 else "–ù–∏–∫–æ–≥–¥–∞"
        
        message = f"""üìä <b>–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:</b>
        
ü§ñ <b>–°–æ—Å—Ç–æ—è–Ω–∏–µ:</b> {status}
‚è∞ <b>–ò–Ω—Ç–µ—Ä–≤–∞–ª:</b> {config['schedule_minutes']} –º–∏–Ω—É—Ç
üì§ <b>–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—Ç–ø—Ä–∞–≤–∫–∞:</b> {last_sent}
üî¢ <b>–í–µ—Ä—Å–∏—è:</b> {config['version']}"""
        
        send_telegram_message(message, chat_id)
    
    elif command.startswith('/schedule '):
        try:
            minutes = int(command.split()[1])
            if 1 <= minutes <= 10080:  # –æ—Ç 1 –º–∏–Ω—É—Ç—ã –¥–æ –Ω–µ–¥–µ–ª–∏
                config['schedule_minutes'] = minutes
                save_config(config)
                
                if minutes < 60:
                    time_str = f"{minutes} –º–∏–Ω—É—Ç"
                elif minutes < 1440:
                    time_str = f"{minutes // 60} —á–∞—Å–æ–≤"
                else:
                    time_str = f"{minutes // 1440} –¥–Ω–µ–π"
                
                send_telegram_message(f"‚è∞ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ!</b>\n\nüìÖ –ù–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {time_str}", chat_id)
            else:
                send_telegram_message("‚ùå –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –º–∏–Ω—É—Ç—ã –¥–æ 7 –¥–Ω–µ–π (10080 –º–∏–Ω—É—Ç)", chat_id)
        except (ValueError, IndexError):
            send_telegram_message("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /schedule 30", chat_id)
    
    elif command == '/joke':
        success, result = send_joke_to_channel()
        if success:
            config['last_sent'] = int(time.time())
            save_config(config)
            send_telegram_message(f"‚úÖ <b>–ê–Ω–µ–∫–¥–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª!</b>\n\nüìù <i>{result[:100]}...</i>", chat_id)
        else:
            send_telegram_message(f"‚ùå <b>–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:</b>\n\n{result}", chat_id)
    
    elif command == '/help':
        help_text = """üéõÔ∏è <b>–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º:</b>

üöÄ <b>/start</b> ‚Äî –≤–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ—Ç–ø—Ä–∞–≤–∫—É
‚è∏Ô∏è <b>/stop</b> ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–æ—Ç–ø—Ä–∞–≤–∫—É  
üìä <b>/status</b> ‚Äî —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
‚è∞ <b>/schedule [–º–∏–Ω—É—Ç—ã]</b> ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª
üòÑ <b>/joke</b> ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–µ–∫–¥–æ—Ç —Å–µ–π—á–∞—Å
‚ùì <b>/help</b> ‚Äî —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

<b>–ü—Ä–∏–º–µ—Ä—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:</b>
‚Ä¢ <code>/schedule 15</code> ‚Äî –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
‚Ä¢ <code>/schedule 60</code> ‚Äî –∫–∞–∂–¥—ã–π —á–∞—Å
‚Ä¢ <code>/schedule 1440</code> ‚Äî –∫–∞–∂–¥—ã–π –¥–µ–Ω—å"""
        
        send_telegram_message(help_text, chat_id)
    
    else:
        send_telegram_message("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help", chat_id)
    
    return config

# –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram
def get_updates(offset=0):
    bot_token = os.environ.get('ADMIN_BOT_TOKEN')
    if not bot_token:
        print("‚ùå ADMIN_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return []
    
    url = f'https://api.telegram.org/bot{bot_token}/getUpdates'
    params = {'offset': offset, 'timeout': 30}
    
    try:
        response = requests.get(url, params=params, timeout=35)
        if response.status_code == 200:
            return response.json().get('result', [])
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
    
    return []

def main():
    print("üéõÔ∏è Admin Bot –∑–∞–ø—É—â–µ–Ω!")
    config = load_config()
    last_update_id = 0
    
    while True:
        try:
            updates = get_updates(last_update_id + 1)
            
            for update in updates:
                last_update_id = update['update_id']
                
                if 'message' in update:
                    message = update['message']
                    chat_id = message['chat']['id']
                    text = message.get('text', '')
                    
                    if text.startswith('/'):
                        print(f"üì• –ö–æ–º–∞–Ω–¥–∞: {text} –æ—Ç {chat_id}")
                        config = process_command(text, chat_id, config)
        
        except KeyboardInterrupt:
            print("\n‚èπÔ∏è Admin Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            time.sleep(5)

if __name__ == "__main__":
    main()
