import requests
import json
import os
import time
import random

def load_config():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ config.json"""
    try:
        with open('config.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        default_config = {
            'bot_enabled': True,
            'schedule': 'daily'
        }
        with open('config.json', 'w', encoding='utf-8') as f:
            json.dump(default_config, f, ensure_ascii=False, indent=2)
        return default_config
    except:
        return {'bot_enabled': True, 'schedule': 'daily'}

def save_config(config):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ config.json"""
    try:
        with open('config.json', 'w', encoding='utf-8') as f:
            json.dump(config, f, ensure_ascii=False, indent=2)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è config.json: {e}")
        return False

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã
ADMIN_TOKEN = os.environ.get('ADMIN_BOT_TOKEN', '').strip()
MAIN_BOT_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN', '').strip()

if not ADMIN_TOKEN:
    print("‚ùå –û–®–ò–ë–ö–ê: ADMIN_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    exit(1)

ADMIN_CHAT_ID = "6396018806"

def send_message(text, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–±–æ—Ç–∞"""
    url = f"https://api.telegram.org/bot{ADMIN_TOKEN}/sendMessage"
    data = {
        'chat_id': ADMIN_CHAT_ID,
        'text': text,
        'parse_mode': 'HTML'
    }
    if reply_markup:
        data['reply_markup'] = json.dumps(reply_markup)
    
    try:
        response = requests.post(url, data=data, timeout=10)
        return response.status_code == 200
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False

def send_instant_joke():
    """–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–µ–∫–¥–æ—Ç–∞ —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞"""
    if not MAIN_BOT_TOKEN:
        return False
        
    jokes = [
        "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç —Ç—ë–º–Ω—É—é —Ç–µ–º—É? –ü–æ—Ç–æ–º—É —á—Ç–æ —Å–≤–µ—Ç –ø—Ä–∏—Ç—è–≥–∏–≤–∞–µ—Ç –±–∞–≥–∏! üêõ",
        "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –ø–∞–º—è—Ç—å –∫–∞–∫ —É —Ä—ã–±–∫–∏! ‚Äî –ê —Å –∫–∞–∫–∏—Ö –ø–æ—Ä? ‚Äî –ö—Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç? üê†",
        "–ñ–µ–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—É: ‚Äî –î–æ—Ä–æ–≥–æ–π, —Å—Ö–æ–¥–∏ –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ —Ö–ª–µ–±–æ–º, –∏ –µ—Å–ª–∏ –±—É–¥—É—Ç —è–π—Ü–∞ ‚Äî –∫—É–ø–∏ –¥—é–∂–∏–Ω—É. –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç 12 –±–∞—Ç–æ–Ω–æ–≤ —Ö–ª–µ–±–∞. ü•ñ",
        "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –¥–æ–º–æ–π –≤ 3 —É—Ç—Ä–∞. –ñ–µ–Ω–∞: ‚Äî –¢—ã –≥–¥–µ –±—ã–ª?! ‚Äî –ù–∞ —Ä–∞–±–æ—Ç–µ, –æ—Ç–ª–∞–∂–∏–≤–∞–ª –±–∞–≥–∏. ‚Äî –ê —è —á—Ç–æ, –¥—É—Ä–∞? ‚Äî –ù–µ—Ç, —Ç—ã feature! ‚ú®"
    ]
    
    joke = random.choice(jokes)
    
    url = f"https://api.telegram.org/bot{MAIN_BOT_TOKEN}/sendMessage"
    data = {
        'chat_id': ADMIN_CHAT_ID,
        'text': f"üé≠ <b>–ê–Ω–µ–∫–¥–æ—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É:</b>\n\n{joke}",
        'parse_mode': 'HTML'
    }
    
    try:
        response = requests.post(url, data=data, timeout=10)
        return response.status_code == 200
    except:
        return False

def get_main_keyboard():
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    config = load_config()
    status = "üü¢ –í–∫–ª—é—á–µ–Ω" if config.get('bot_enabled', True) else "üî¥ –û—Ç–∫–ª—é—á–µ–Ω"
    schedule = config.get('schedule', 'daily')
    
    schedule_text = {
        'daily': 'üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ',
        '10m': 'üïô –ö–∞–∂–¥—ã–µ 10–º–∏–Ω',
        '5m': 'üïî –ö–∞–∂–¥—ã–µ 5–º–∏–Ω',
        '1m': 'üïê –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É'
    }.get(schedule, 'üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ')
    
    keyboard = {
        'inline_keyboard': [
            [
                {'text': f'–°—Ç–∞—Ç—É—Å: {status}', 'callback_data': 'status'}
            ],
            [
                {'text': '‚ñ∂Ô∏è –í–∫–ª—é—á–∏—Ç—å', 'callback_data': 'start_bot'},
                {'text': '‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å', 'callback_data': 'stop_bot'}
            ],
            [
                {'text': 'üé≠ –ê–Ω–µ–∫–¥–æ—Ç —Å–µ–π—á–∞—Å!', 'callback_data': 'send_joke'}
            ],
            [
                {'text': f'‚è∞ {schedule_text}', 'callback_data': 'schedule_menu'}
            ]
        ]
    }
    return keyboard

def get_schedule_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    config = load_config()
    current = config.get('schedule', 'daily')
    
    keyboard = {
        'inline_keyboard': [
            [
                {'text': 'üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ' + (' ‚úÖ' if current == 'daily' else ''), 'callback_data': 'set_daily'}
            ],
            [
                {'text': 'üïô –ö–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç' + (' ‚úÖ' if current == '10m' else ''), 'callback_data': 'set_10m'}
            ],
            [
                {'text': 'üïî –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç' + (' ‚úÖ' if current == '5m' else ''), 'callback_data': 'set_5m'}
            ],
            [
                {'text': 'üïê –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É' + (' ‚úÖ' if current == '1m' else ''), 'callback_data': 'set_1m'}
            ],
            [
                {'text': 'üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'callback_data': 'back_to_menu'}
            ]
        ]
    }
    return keyboard

def handle_callback(callback_data):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫"""
    config = load_config()
    
    if callback_data == 'start_bot':
        config['bot_enabled'] = True
        if save_config(config):
            print("‚úÖ –ë–æ—Ç –≤–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
            return "‚úÖ –ë–æ—Ç –≤–∫–ª—é—á–µ–Ω! –ê–Ω–µ–∫–¥–æ—Ç—ã –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.", get_main_keyboard()
        else:
            return "‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞", get_main_keyboard()
            
    elif callback_data == 'stop_bot':
        config['bot_enabled'] = False
        if save_config(config):
            print("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
            return "üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ê–Ω–µ–∫–¥–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç.", get_main_keyboard()
        else:
            return "‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞", get_main_keyboard()
    
    elif callback_data == 'send_joke':
        if send_instant_joke():
            return "üé≠ –ê–Ω–µ–∫–¥–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!", get_main_keyboard()
        else:
            return "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–µ–∫–¥–æ—Ç–∞", get_main_keyboard()
            
    elif callback_data == 'schedule_menu':
        return "‚è∞ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—Ç–æ—Ç—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤:", get_schedule_keyboard()
        
    elif callback_data.startswith('set_'):
        schedule_map = {
            'set_daily': 'daily',
            'set_10m': '10m', 
            'set_5m': '5m',
            'set_1m': '1m'
        }
        
        new_schedule = schedule_map.get(callback_data)
        if new_schedule:
            config['schedule'] = new_schedule
            if save_config(config):
                schedule_names = {
                    'daily': '–µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
                    '10m': '–∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç',
                    '5m': '–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç', 
                    '1m': '–∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É'
                }
                print(f"‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {schedule_names[new_schedule]}")
                return f"‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {schedule_names[new_schedule]}", get_schedule_keyboard()
        
        return "‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è", get_schedule_keyboard()
        
    elif callback_data == 'back_to_menu':
        return "üéõÔ∏è <b>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", get_main_keyboard()
            
    elif callback_data == 'status':
        status = "üü¢ –í–∫–ª—é—á–µ–Ω" if config.get('bot_enabled', True) else "üî¥ –û—Ç–∫–ª—é—á–µ–Ω"
        schedule = config.get('schedule', 'daily')
        schedule_names = {
            'daily': '–µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
            '10m': '–∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç',
            '5m': '–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç',
            '1m': '–∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É'
        }
        return f"üìä <b>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:</b>\n‚Ä¢ –ë–æ—Ç: {status}\n‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {schedule_names.get(schedule, '–µ–∂–µ–¥–Ω–µ–≤–Ω–æ')}", get_main_keyboard()
        
    return "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞", get_main_keyboard()

def get_updates():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram"""
    url = f"https://api.telegram.org/bot{ADMIN_TOKEN}/getUpdates"
    params = {'timeout': 30, 'offset': 0}
    
    try:
        response = requests.get(url, params=params, timeout=35)
        if response.status_code == 200:
            return response.json().get('result', [])
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
    
    return []

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–¥–º–∏–Ω-–±–æ—Ç–∞"""
    print("ü§ñ –ê–¥–º–∏–Ω-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    welcome_text = "üéõÔ∏è <b>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    keyboard = get_main_keyboard()
    
    if send_message(welcome_text, keyboard):
        print("‚úÖ –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∞–Ω–µ–ª–∏")
    
    # –°–ª—É—à–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    start_time = time.time()
    processed_updates = set()
    
    while time.time() - start_time < 3500:  # –ü–æ—á—Ç–∏ —á–∞—Å —Ä–∞–±–æ—Ç—ã
        updates = get_updates()
        
        for update in updates:
            update_id = update.get('update_id')
            if update_id in processed_updates:
                continue
                
            processed_updates.add(update_id)
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –æ—Ç –∫–Ω–æ–ø–æ–∫
            if 'callback_query' in update:
                callback = update['callback_query']
                callback_data = callback.get('data', '')
                
                response_text, keyboard = handle_callback(callback_data)
                send_message(response_text, keyboard)
                print(f"üì± –û–±—Ä–∞–±–æ—Ç–∞–Ω callback: {callback_data}")
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ /start
            elif 'message' in update:
                message = update['message']
                text = message.get('text', '').lower()
                
                if text in ['/start', '/menu']:
                    welcome_text = "üéõÔ∏è <b>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
                    keyboard = get_main_keyboard()
                    send_message(welcome_text, keyboard)
                    print("üìù –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω—é –ø–æ –∫–æ–º–∞–Ω–¥–µ")
        
        time.sleep(2)
    
    print("‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main()
