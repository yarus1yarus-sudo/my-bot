import requests
import json
import os
import time

def load_config():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ config.json"""
    try:
        with open('config.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        default_config = {
            'bot_enabled': True,
            'schedule': 'daily'
        }
        with open('config.json', 'w', encoding='utf-8') as f:
            json.dump(default_config, f, ensure_ascii=False, indent=2)
        return default_config
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ config.json: {e}")
        return {'bot_enabled': True, 'schedule': 'daily'}

def save_config(config):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ config.json"""
    try:
        with open('config.json', 'w', encoding='utf-8') as f:
            json.dump(config, f, ensure_ascii=False, indent=2)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è config.json: {e}")
        return False

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
ADMIN_TOKEN = os.environ.get('ADMIN_BOT_TOKEN', '').strip()
if not ADMIN_TOKEN:
    print("‚ùå –û–®–ò–ë–ö–ê: ADMIN_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    exit(1)

ADMIN_CHAT_ID = "6396018806"

def send_message(text, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    url = f"https://api.telegram.org/bot{ADMIN_TOKEN}/sendMessage"
    data = {
        'chat_id': ADMIN_CHAT_ID,
        'text': text,
        'parse_mode': 'HTML'
    }
    if reply_markup:
        data['reply_markup'] = json.dumps(reply_markup)
    
    try:
        response = requests.post(url, data=data, timeout=10)
        return response.status_code == 200
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False

def get_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    config = load_config()
    status = "üü¢ –í–∫–ª—é—á–µ–Ω" if config.get('bot_enabled', True) else "üî¥ –û—Ç–∫–ª—é—á–µ–Ω"
    
    keyboard = {
        'inline_keyboard': [
            [
                {'text': f'–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞: {status}', 'callback_data': 'status'}
            ],
            [
                {'text': '‚ñ∂Ô∏è –í–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞', 'callback_data': 'start_bot'},
                {'text': '‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞', 'callback_data': 'stop_bot'}
            ],
            [
                {'text': 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'callback_data': 'stats'},
                {'text': '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'callback_data': 'settings'}
            ]
        ]
    }
    return keyboard

def handle_callback(callback_data):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫"""
    config = load_config()
    
    if callback_data == 'start_bot':
        config['bot_enabled'] = True
        if save_config(config):
            return "‚úÖ –ë–æ—Ç –≤–∫–ª—é—á–µ–Ω! –ê–Ω–µ–∫–¥–æ—Ç—ã –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é."
        else:
            return "‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞"
            
    elif callback_data == 'stop_bot':
        config['bot_enabled'] = False
        if save_config(config):
            return "üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ê–Ω–µ–∫–¥–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç."
        else:
            return "‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞"
            
    elif callback_data == 'status':
        status = "üü¢ –í–∫–ª—é—á–µ–Ω" if config.get('bot_enabled', True) else "üî¥ –û—Ç–∫–ª—é—á–µ–Ω"
        return f"üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞: {status}"
        
    elif callback_data == 'stats':
        return "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n‚Ä¢ –°–µ–≥–æ–¥–Ω—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: 1 –∞–Ω–µ–∫–¥–æ—Ç\n‚Ä¢ –°—Ç–∞—Ç—É—Å: –∞–∫—Ç–∏–≤–µ–Ω"
        
    elif callback_data == 'settings':
        return "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ\n‚Ä¢ –í—Ä–µ–º—è: –∞–≤—Ç–æ"
        
    return "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞"

def get_updates():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram"""
    url = f"https://api.telegram.org/bot{ADMIN_TOKEN}/getUpdates"
    params = {'timeout': 30, 'offset': 0}
    
    try:
        response = requests.get(url, params=params, timeout=35)
        if response.status_code == 200:
            return response.json().get('result', [])
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
    
    return []

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–¥–º–∏–Ω-–±–æ—Ç–∞"""
    print("ü§ñ –ê–¥–º–∏–Ω-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    welcome_text = "üéõÔ∏è <b>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    keyboard = get_keyboard()
    
    if send_message(welcome_text, keyboard):
        print("‚úÖ –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
    
    # –°–ª—É—à–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    start_time = time.time()
    processed_updates = set()
    
    while time.time() - start_time < 280:  # 4 –º–∏–Ω 40 —Å–µ–∫ (–¥–æ timeout 5 –º–∏–Ω)
        updates = get_updates()
        
        for update in updates:
            update_id = update.get('update_id')
            if update_id in processed_updates:
                continue
                
            processed_updates.add(update_id)
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –æ—Ç –∫–Ω–æ–ø–æ–∫
            if 'callback_query' in update:
                callback = update['callback_query']
                callback_data = callback.get('data', '')
                
                response_text = handle_callback(callback_data)
                keyboard = get_keyboard()  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                
                send_message(response_text, keyboard)
                print(f"üì± –û–±—Ä–∞–±–æ—Ç–∞–Ω callback: {callback_data}")
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
            elif 'message' in update:
                message = update['message']
                text = message.get('text', '').lower()
                
                if text in ['/start', '/menu', '–º–µ–Ω—é']:
                    welcome_text = "üéõÔ∏è <b>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
                    keyboard = get_keyboard()
                    send_message(welcome_text, keyboard)
                    print("üìù –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω—é")
        
        time.sleep(2)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
    
    print("‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –∏—Å—Ç–µ–∫–ª–æ, –∑–∞–≤–µ—Ä—à–∞–µ–º...")

if __name__ == "__main__":
    main()
