import requests
import os
from bs4 import BeautifulSoup
import random
from datetime import datetime

def get_joke():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞"""
    try:
        url = "https://anekdot.ru/random/anekdot/"
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()
        
        soup = BeautifulSoup(response.content, 'html.parser')
        jokes = soup.find_all('div', class_='text')
        
        if jokes:
            joke = random.choice(jokes)
            joke_text = joke.get_text(strip=True)
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
            if len(joke_text) > 500:
                joke_text = joke_text[:500] + "..."
            return joke_text
        else:
            return get_backup_joke()
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–∞: {e}")
        return get_backup_joke()

def get_backup_joke():
    """–†–µ–∑–µ—Ä–≤–Ω—ã–µ –∞–Ω–µ–∫–¥–æ—Ç—ã"""
    backup_jokes = [
        "‚Äî –î–æ–∫—Ç–æ—Ä, —É –º–µ–Ω—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∞–º—è—Ç—å—é.\n‚Äî –ö–æ–≥–¥–∞ —ç—Ç–æ –Ω–∞—á–∞–ª–æ—Å—å?\n‚Äî –ß—Ç–æ –Ω–∞—á–∞–ª–æ—Å—å?",
        "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –¥–æ–º–æ–π.\n–ñ–µ–Ω–∞:\n‚Äî –°—Ö–æ–¥–∏ –≤ –º–∞–≥–∞–∑–∏–Ω, –∫—É–ø–∏ —Ö–ª–µ–±. –ï—Å–ª–∏ –±—É–¥—É—Ç —è–π—Ü–∞ ‚Äî –∫—É–ø–∏ –¥–µ—Å—è—Ç–æ–∫.\n–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç 10 –±—É—Ö–∞–Ω–æ–∫ —Ö–ª–µ–±–∞.\n‚Äî –ó–∞—á–µ–º —Å—Ç–æ–ª—å–∫–æ —Ö–ª–µ–±–∞?!\n‚Äî –Ø–π—Ü–∞ –±—ã–ª–∏...",
        "‚Äî –ê–ª–ª–æ, —ç—Ç–æ –∑–æ–æ–ø–∞—Ä–∫?\n‚Äî –î–∞.\n‚Äî –°–±–µ–∂–∞–ª —Å–ª–æ–Ω?\n‚Äî –ù–µ—Ç.\n‚Äî –ê –∂–∞–ª—å, –∞ —Ç–æ —É –º–µ–Ω—è –≤ –æ–≥–æ—Ä–æ–¥–µ –∫—Ç–æ-—Ç–æ –∫–∞—Ä—Ç–æ—à–∫—É –∫–æ–ø–∞–µ—Ç...",
        "–í—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –¥–≤–∞ –¥—Ä—É–≥–∞:\n‚Äî –ö–∞–∫ –¥–µ–ª–∞?\n‚Äî –û—Ç–ª–∏—á–Ω–æ! –í—á–µ—Ä–∞ –≤—ã–∏–≥—Ä–∞–ª –≤ –ª–æ—Ç–µ—Ä–µ—é –º–∏–ª–ª–∏–æ–Ω!\n‚Äî –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –ò —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?\n‚Äî –ë—É–¥—É –ø–æ–∫—É–ø–∞—Ç—å –±–∏–ª–µ—Ç—ã, –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ–∏–≥—Ä–∞—é...",
        "‚Äî –î–æ–∫—Ç–æ—Ä, —á—Ç–æ —Å–æ –º–Ω–æ–π?\n‚Äî –í–∞–º –Ω—É–∂–µ–Ω –ø–æ–ª–Ω—ã–π –ø–æ–∫–æ–π.\n‚Äî –ê —á—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç?\n‚Äî –ù—É... –∂–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ —É–µ—Ö–∞—Ç—å –∫ –º–∞–º–µ –Ω–∞ –º–µ—Å—è—Ü."
    ]
    return random.choice(backup_jokes)

def send_to_telegram(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –∫–∞–Ω–∞–ª"""
    bot_token = os.environ['BOT_TOKEN']
    channel_id = os.environ['CHANNEL_ID']
    
    try:
        url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
        data = {
            "chat_id": channel_id,
            "text": message,
            "parse_mode": "HTML"
        }
        
        response = requests.post(url, data=data, timeout=10)
        response.raise_for_status()
        
        result = response.json()
        if result.get("ok"):
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API Telegram: {result.get('description')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–∏–Ω –∞–Ω–µ–∫–¥–æ—Ç"""
    print(f"ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–µ–∫–¥–æ—Ç
    joke = get_joke()
    print(f"üìñ –ü–æ–ª—É—á–µ–Ω –∞–Ω–µ–∫–¥–æ—Ç: {joke[:50]}...")
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    current_time = datetime.now().strftime('%H:%M')
    message = f"üé≠ <b>–ê–Ω–µ–∫–¥–æ—Ç –¥–Ω—è</b> ({current_time})\n\n{joke}\n\n#–∞–Ω–µ–∫–¥–æ—Ç #—é–º–æ—Ä"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
    if send_to_telegram(message):
        print("üéâ –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–µ–∫–¥–æ—Ç")

if __name__ == "__main__":
    main()
