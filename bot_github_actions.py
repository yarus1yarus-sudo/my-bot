import os
import json
import time
import requests
from bs4 import BeautifulSoup

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
def load_config():
    try:
        with open('config.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        default_config = {
            "bot_enabled": True,
            "schedule_minutes": 15,
            "last_sent": 0,
            "admin_id": 6396018806,
            "version": "1.0"
        }
        save_config(default_config)
        return default_config

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
def save_config(config):
    with open('config.json', 'w', encoding='utf-8') as f:
        json.dump(config, f, indent=2, ensure_ascii=False)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∞–Ω–µ–∫–¥–æ—Ç
def should_send_joke(config):
    if not config['bot_enabled']:
        print("‚è∏Ô∏è –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ –∫–æ–º–∞–Ω–¥–µ admin")
        return False
    
    current_time = int(time.time())
    last_sent = config['last_sent']
    interval_seconds = config['schedule_minutes'] * 60
    
    if current_time - last_sent >= interval_seconds:
        print(f"‚úÖ –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏! –ü—Ä–æ—à–ª–æ {(current_time - last_sent) // 60} –º–∏–Ω—É—Ç")
        return True
    else:
        remaining = ((last_sent + interval_seconds) - current_time) // 60
        print(f"‚è∞ –ï—â—ë –Ω–µ –≤—Ä–µ–º—è. –û—Å—Ç–∞–ª–æ—Å—å {remaining} –º–∏–Ω—É—Ç")
        return False

def get_joke():
    # –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∞–Ω–µ–∫–¥–æ—Ç—ã –Ω–∞ —Å–ª—É—á–∞–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞
    backup_jokes = [
        "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç ‚Äî —ç—Ç–æ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã, –æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –Ω–µ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–ª–∏, —Å–ø–æ—Å–æ–±–∞–º–∏, –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç–µ.",
        "‚Äî –ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ø—É—Ç–∞—é—Ç –•—ç–ª–ª–æ—É–∏–Ω –∏ –†–æ–∂–¥–µ—Å—Ç–≤–æ?\n‚Äî –ü–æ—Ç–æ–º—É —á—Ç–æ 31 OCT = 25 DEC",
        "–ñ–µ–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞:\n‚Äî –î–æ—Ä–æ–≥–æ–π, —Å—Ö–æ–¥–∏ –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ —Ö–ª–µ–±–æ–º. –ò –µ—Å–ª–∏ –±—É–¥—É—Ç —è–π—Ü–∞, –∫—É–ø–∏ –¥–µ—Å—è—Ç–æ–∫.\n–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –¥–æ–º–æ–π —Å 10 –±—É—Ö–∞–Ω–∫–∞–º–∏ —Ö–ª–µ–±–∞.\n‚Äî –ó–∞—á–µ–º —Å—Ç–æ–ª—å–∫–æ —Ö–ª–µ–±–∞?!\n‚Äî –Ø–π—Ü–∞ –±—ã–ª–∏...",
        "–ó–∞—Ö–æ–¥–∏—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –≤ –±–∞—Ä, –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∏–≤–æ.\n–ë–∞—Ä–º–µ–Ω: ‚Äî –ê –ø–∏–≤–æ –∫–æ–Ω—á–∏–ª–æ—Å—å!\n–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç: ‚Äî –¢–æ–≥–¥–∞ –¥–∞–π—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –µ—â–µ.\n–ë–∞—Ä–º–µ–Ω: ‚Äî –ê —á—Ç–æ –µ—â–µ?\n–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç: ‚Äî –ù–µ –∑–Ω–∞—é, —É –≤–∞—Å –∂–µ –º–µ–Ω—é –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å!\n–ë–∞—Ä–º–µ–Ω: ‚Äî –ú–µ–Ω—é —Ç–æ–∂–µ –∫–æ–Ω—á–∏–ª–æ—Å—å.\n–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç: ‚Äî –¢–æ–≥–¥–∞ –∑–∞—á–µ–º –≤—ã –≤–æ–æ–±—â–µ –∑–¥–µ—Å—å —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?!\n–ë–∞—Ä–º–µ–Ω: ‚Äî –Ø –Ω–µ —Ä–∞–±–æ—Ç–∞—é, —è —Ç–æ–∂–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, –ø—Ä–æ—Å—Ç–æ debugging –¥–µ–ª–∞—é!",
        "‚Äî –°–∫–æ–ª—å–∫–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –∑–∞–º–µ–Ω–∏—Ç—å –ª–∞–º–ø–æ—á–∫—É?\n‚Äî –ù–æ–ª—å. –≠—Ç–æ –∞–ø–ø–∞—Ä–∞—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞."
    ]
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —á—Ç–æ–±—ã —Å–∞–π—Ç –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∑–∞–ø—Ä–æ—Å—ã
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç
        response = requests.get('https://www.anekdot.ru/random/anekdot/', 
                              headers=headers, timeout=15)
        response.encoding = 'utf-8'
        
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            
            # –ò—â–µ–º div —Å –∫–ª–∞—Å—Å–æ–º text
            joke_div = soup.find('div', class_='text')
            if joke_div:
                joke_text = joke_div.get_text().strip()
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–Ω–µ–∫–¥–æ—Ç –Ω–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏ –Ω–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π
                if len(joke_text) > 50 and len(joke_text) < 1000:
                    return joke_text
        
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–µ–∫–¥–æ—Ç —Å —Å–∞–π—Ç–∞, –±–µ—Ä–µ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤–∞
        import random
        return random.choice(backup_jokes)
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–∞: {e}")
        # –í —Å–ª—É—á–∞–µ –ª—é–±–æ–π –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç –∏–∑ —Ä–µ–∑–µ—Ä–≤–∞
        import random
        return random.choice(backup_jokes)

def send_to_telegram(message):
    bot_token = os.environ['BOT_TOKEN']
    channel_id = os.environ['CHANNEL_ID']
    
    url = f'https://api.telegram.org/bot{bot_token}/sendMessage'
    
    data = {
        'chat_id': channel_id,
        'text': message,
        'parse_mode': 'HTML'
    }
    
    try:
        response = requests.post(url, data=data, timeout=30)
        if response.status_code == 200:
            print("‚úÖ –ê–Ω–µ–∫–¥–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code}")
            print(response.text)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
        return False

def main():
    print("ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...")
    config = load_config()
    
    if should_send_joke(config):
        joke = get_joke()
        message = f"üòÑ <b>–ê–Ω–µ–∫–¥–æ—Ç –¥–Ω—è</b> üòÑ\n\n{joke}"
        
        if send_to_telegram(message):
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            config['last_sent'] = int(time.time())
            save_config(config)
            print(f"üìä –û–±–Ω–æ–≤–ª—ë–Ω config: –ø–æ—Å–ª–µ–¥–Ω—è—è –æ—Ç–ø—Ä–∞–≤–∫–∞ {config['last_sent']}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–µ–∫–¥–æ—Ç")
    else:
        print("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É")

if __name__ == "__main__":
    main()
